package org.flexiblepower.defpi.lightsimulator.widget.http;

import java.io.IOException;

import javax.annotation.Generated;

import org.flexiblepower.defpi.lightsimulator.LightSimulator;
import org.flexiblepower.defpi.lightsimulator.widget.http.proto.Widget_httpProto.WidgetHTTPRequest;
import org.flexiblepower.defpi.lightsimulator.widget.http.proto.Widget_httpProto.WidgetHTTPResponse;
import org.flexiblepower.defpi.lightsimulator.widget.http.proto.Widget_httpProto.WidgetInfo;
import org.flexiblepower.defpi.lightsimulator.widget.http.proto.Widget_httpProto.WidgetInfo.WidgetType;
import org.flexiblepower.service.Connection;

import com.google.protobuf.ByteString;

/**
 * Widget_httpConnectionHandlerImpl
 *
 * File generated by org.flexiblepower.create-service-maven-plugin.
 * NOTE: This file is generated as a stub, and has to be implemented by the user. Re-running the codegen plugin will
 * not change the contents of this file.
 * Template by TNO, 2017
 *
 * @author coenvl
 */
@Generated(value = "org.flexiblepower.plugin.servicegen", date = "Nov 8, 2017 4:10:45 PM")
public class Widget_httpConnectionHandlerImpl implements Widget_httpConnectionHandler {

    private final Connection connection;

    private final LightSimulator service;

    /**
     * Auto-generated constructor for the ConnectionHandlers of the provided service
     *
     * @param service The service for which to handle the connections
     */
    public Widget_httpConnectionHandlerImpl(final Connection connection, final LightSimulator service) {
        this.connection = connection;
        this.service = service;
        try {
            this.connection
                    .send(WidgetInfo.newBuilder().setType(WidgetType.SMALL_WIDGET).setTitle("Light Simulator").build());
        } catch (final IOException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void handleWidgetHTTPRequestMessage(final WidgetHTTPRequest message) {
        final String response = String.format("Current power: %f W", this.service.getPower());
        try {
            this.connection.send(WidgetHTTPResponse.newBuilder()
                    .setId(message.getId())
                    .setBody(ByteString.copyFromUtf8(response))
                    .setStatus(200)
                    .build());
        } catch (final IOException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void onSuspend() {
        // TODO Auto-generated method stub

    }

    @Override
    public void resumeAfterSuspend() {
        // TODO Auto-generated method stub

    }

    @Override
    public void onInterrupt() {
        // TODO Auto-generated method stub

    }

    @Override
    public void resumeAfterInterrupt() {
        // TODO Auto-generated method stub

    }

    @Override
    public void terminated() {
        // TODO Auto-generated method stub

    }

}